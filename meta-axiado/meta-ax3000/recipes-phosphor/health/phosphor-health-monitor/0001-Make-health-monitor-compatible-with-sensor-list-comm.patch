From f8d797372088ec0a9b2356de21496b0bc7fce95d Mon Sep 17 00:00:00 2001
From: Yong Li <yong.b.li@linux.intel.com>
Date: Fri, 12 Mar 2021 09:12:19 +0800
Subject: [PATCH] =?UTF-8?q?Make=20health-monitor=20compatible=20with=20?=
 =?UTF-8?q?=E2=80=9Csensor=20list=E2=80=9D=20command?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

When running both the health-monitor with dbus-sensors service,
"ipmitool sensor list" command cannot list all sensors and error
reported.
The root cause is that health-monitor exports it as an utilization
sensor but incompatible with sensor reading:
Max and min values should be set and max should > min;
Critical/warning values should be set
Object Manager should be registered on dbus "/"

Tested:
Ipmitool sensor list can list all these sensors without error.

Signed-off-by: Yong Li <yong.b.li@linux.intel.com>
Change-Id: Ie9311f153b647e2ddec09aaa3edf448926c21e97
---
 healthMonitor.cpp | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/healthMonitor.cpp b/healthMonitor.cpp
index 9024048..be62c3a 100644
--- a/healthMonitor.cpp
+++ b/healthMonitor.cpp
@@ -243,7 +243,10 @@ const std::map<std::string, std::function<double(std::string path)>>
 void HealthSensor::setSensorThreshold(double criticalHigh, double warningHigh)
 {
     CriticalInterface::criticalHigh(criticalHigh);
+    CriticalInterface::criticalLow(std::numeric_limits<double>::quiet_NaN());
+
     WarningInterface::warningHigh(warningHigh);
+    WarningInterface::warningLow(std::numeric_limits<double>::quiet_NaN());
 }
 
 void HealthSensor::setSensorValueToDbus(const double value)
@@ -608,8 +611,8 @@ int main()
     // Create an health monitor object
     healthMon = std::make_shared<phosphor::health::HealthMon>(*conn);
 
-    // Add object manager to sensor node
-    sdbusplus::server::manager::manager objManager(*conn, SENSOR_OBJPATH);
+    // Add object manager through object_server
+    sdbusplus::asio::object_server objectServer(conn);
 
     sdbusplus::asio::sd_event_wrapper sdEvents(io);
 
-- 
2.17.1

